version: "3.8"

services:
  # MinIO for object storage
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL for metadata
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: neuralops
      POSTGRES_USER: neuralops
      POSTGRES_PASSWORD: neuralops
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U neuralops"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nessie for catalog
  nessie:
    image: projectnessie/nessie:latest
    ports:
      - "19120:19120"
    environment:
      QUARKUS_HTTP_PORT: 19120

  # Model Registry Service
  model-registry:
    build:
      context: .
      dockerfile: Dockerfile.multi
      target: model-registry
    ports:
      - "8084:8084"
    environment:
      - LOG_LEVEL=info
      - PORT=8084
      - DATABASE_URL=postgres://neuralops:neuralops@postgres:5432/neuralops
    depends_on:
      - postgres
      - minio
    restart: unless-stopped

  # AutoML Service
  automl-service:
    build:
      context: .
      dockerfile: Dockerfile.multi
      target: automl-service
    ports:
      - "8085:8085"
    environment:
      - LOG_LEVEL=info
      - PORT=8085
      - DATABASE_URL=postgres://neuralops:neuralops@postgres:5432/neuralops
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    depends_on:
      - postgres
      - minio
    restart: unless-stopped

  # API Gateway (includes dashboard)
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile.multi
      target: api-gateway
    ports:
      - "8080:8080"
    environment:
      - LOG_LEVEL=info
      - PORT=8080
      - ORCHESTRATOR_ADDR=orchestrator:8081
      - AI_ENGINE_ADDR=ai-engine:8082
      - ICEBERG_ADDR=iceberg-manager:8083
      - MODEL_REGISTRY_ADDR=model-registry:8084
      - AUTOML_ADDR=automl-service:8085
    depends_on:
      - model-registry
      - automl-service
    restart: unless-stopped

volumes:
  minio-data:
  postgres-data:

networks:
  default:
    name: neuralops-network
