syntax = "proto3";

package automl.v1;

option go_package = "neuralops/api/proto/automl/v1";

import "google/protobuf/timestamp.proto";

service AutoMLService {
  rpc CreateExperiment(CreateExperimentRequest) returns (CreateExperimentResponse);
  rpc GetExperiment(GetExperimentRequest) returns (GetExperimentResponse);
  rpc ListExperiments(ListExperimentsRequest) returns (ListExperimentsResponse);
  rpc StartTuning(StartTuningRequest) returns (StartTuningResponse);
  rpc GetTuningStatus(GetTuningStatusRequest) returns (GetTuningStatusResponse);
  rpc GetBestModel(GetBestModelRequest) returns (GetBestModelResponse);
}

message Experiment {
  string id = 1;
  string name = 2;
  string dataset_path = 3;
  string target_column = 4;
  TaskType task_type = 5;
  ExperimentStatus status = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
  TuningConfig tuning_config = 9;
}

message TuningConfig {
  int32 max_trials = 1;
  int32 max_parallel_trials = 2;
  string optimization_metric = 3;
  repeated string algorithms = 4;
  map<string, ParameterSpace> parameter_space = 5;
}

message ParameterSpace {
  oneof space {
    IntRange int_range = 1;
    DoubleRange double_range = 2;
    CategoricalValues categorical = 3;
  }
}

message IntRange {
  int32 min = 1;
  int32 max = 2;
  int32 step = 3;
}

message DoubleRange {
  double min = 1;
  double max = 2;
  double step = 3;
}

message CategoricalValues {
  repeated string values = 1;
}

message Trial {
  string id = 1;
  string experiment_id = 2;
  int32 trial_number = 3;
  map<string, string> parameters = 4;
  map<string, double> metrics = 5;
  TrialStatus status = 6;
  google.protobuf.Timestamp started_at = 7;
  google.protobuf.Timestamp completed_at = 8;
  string model_artifact_uri = 9;
}

enum TaskType {
  TASK_TYPE_UNSPECIFIED = 0;
  TASK_TYPE_CLASSIFICATION = 1;
  TASK_TYPE_REGRESSION = 2;
  TASK_TYPE_CLUSTERING = 3;
  TASK_TYPE_TIME_SERIES = 4;
}

enum ExperimentStatus {
  EXPERIMENT_STATUS_UNSPECIFIED = 0;
  EXPERIMENT_STATUS_CREATED = 1;
  EXPERIMENT_STATUS_RUNNING = 2;
  EXPERIMENT_STATUS_COMPLETED = 3;
  EXPERIMENT_STATUS_FAILED = 4;
  EXPERIMENT_STATUS_CANCELLED = 5;
}

enum TrialStatus {
  TRIAL_STATUS_UNSPECIFIED = 0;
  TRIAL_STATUS_PENDING = 1;
  TRIAL_STATUS_RUNNING = 2;
  TRIAL_STATUS_COMPLETED = 3;
  TRIAL_STATUS_FAILED = 4;
}

message CreateExperimentRequest {
  string name = 1;
  string dataset_path = 2;
  string target_column = 3;
  TaskType task_type = 4;
  TuningConfig tuning_config = 5;
}

message CreateExperimentResponse {
  Experiment experiment = 1;
}

message GetExperimentRequest {
  string id = 1;
}

message GetExperimentResponse {
  Experiment experiment = 1;
}

message ListExperimentsRequest {
  int32 page_size = 1;
  string page_token = 2;
}

message ListExperimentsResponse {
  repeated Experiment experiments = 1;
  string next_page_token = 2;
}

message StartTuningRequest {
  string experiment_id = 1;
}

message StartTuningResponse {
  string job_id = 1;
}

message GetTuningStatusRequest {
  string experiment_id = 1;
}

message GetTuningStatusResponse {
  ExperimentStatus status = 1;
  int32 completed_trials = 2;
  int32 total_trials = 3;
  Trial best_trial = 4;
  repeated Trial recent_trials = 5;
}

message GetBestModelRequest {
  string experiment_id = 1;
}

message GetBestModelResponse {
  Trial best_trial = 1;
  string model_artifact_uri = 2;
  map<string, double> metrics = 3;
  map<string, string> parameters = 4;
}
